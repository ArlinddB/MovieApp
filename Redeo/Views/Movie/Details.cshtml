@model Movie;

@{
    ViewData["Title"] = @Model.Name;
}

<div class="flex flex-col">
    <div class="mx-auto">
        <iframe style="width:85vw; height:75vh;" src="@Model.MovieUrl" 
        title="YouTube video player" 
        frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
        allowfullscreen></iframe>
    </div>

    <div class="flex justify-between w-[85vw] mx-auto text-zinc-300 my-3">
        <div>
            <h1 class="text-3xl">@Model.Name (@Model.DateOfRelease.ToString("yyyy"))</h1>
        </div>
        <div class="flex gap-x-5">
            <div class="text-2xl hover:text-blue-500 cursor-pointer transition duration-75 ease-in-out">
                <i id="heart-icon-@Model.Id" class="fa-regular fa-heart "
                onclick="toggleFavorite(@Model.Id)" data-is-favorite=""></i>
            </div>
            <div class="text-lg">
                <a href="#">
                    <i class="fa-brands fa-youtube"></i>
                    TRAILER
                </a>
            </div>
        </div>
    </div>
    
    <div class="flex justify-center flex-col sm:flex-row py-10">

        <div>
            <img class="w-[11rem] sm:w-[17rem] flex justify-center" src="@Model.MoviePicture" />
        </div>
        <div class="p-4 sm:w-1/3">
            <div class="mt-4 mb-4 grid grid-cols-2 gap-6 w-20" >
                <p class="text-slate-300 text-xs w-20 uppercase">@Model.Quality</p>
                <p class="text-slate-300 text-xs w-20">@Model.Duration min</p>
            </div>
            <div>
                <p class="text-xs text-slate-300">Description: </p>
                <p class="text-sm text-slate-300" id="description">@Model.Description </p>
            </div>
            <div class="grid grid-cols-2 mt-4 gap-5">
                <div class="">
                    <p class="text-slate-300 text-sm"><strong>Released: </strong>@Model.DateOfRelease.ToString("dd MMMM yyyy")</p>            
                </div>
                <div>
                    <p class="text-slate-300 text-sm"><strong>Producer: </strong>
                        <a asp-controller="Producers" asp-action="Details" asp-route-id="@Model.Producers.Id">@Model.Producers.ProducersName</a>
                    </p>                        
                </div>
                <div class="text-slate-300 text-sm">
                    <p><strong>Genre: </strong></p>
                    @foreach (var c in Model.Movies_Categories)
                    {
                        <a asp-controller="Movie" asp-action="Index" asp-route-genre="@c.Category.CategoryName">@c.Category.CategoryName </a>                       
                    }
                </div>
                <div class="text-slate-300 text-sm">
                    <p><strong>Actors: </strong></p
                    @foreach (var a in Model.Movies_Actors)
                    {
                        <a asp-controller="Actor" asp-action="Details" asp-route-id="@a.ActorId">@a.Actor?.FullName </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>

var movie = @Model.Id;

window.onload = function() {
    checkIfFavorite(movie);
};

function checkIfFavorite(movie) {
    $.ajax({
        type: 'GET',
        url: "@Url.Action("CheckFavorite", "FavoriteMovies")",
        data: { movieId: movie },
        success: function(data) {
            if (data.isFavorite) {
                $("#heart-icon-" + movie).addClass("fa-solid text-blue-500");
                $('#heart-icon-' + movie).data('is-favorite', true);
            } else {
                $("#heart-icon-" + movie).removeClass("fa-solid text-blue-500");
                $('#heart-icon-' + movie).data('is-favorite', false);
            }
        }
    });
}


function toggleFavorite(movieId) {
    var isFavorite = $('#heart-icon-' + movieId).data('is-favorite');
    console.log(isFavorite)
    var url = isFavorite ? "@Url.Action("Remove","FavoriteMovies")" : "@Url.Action("Add","FavoriteMovies")";

    $.ajax({
        type: "POST",
        url: url,
        data: { movieId: movieId },
        success: function (response) {
            if (response.isAdded) {
                // update the UI to show the filled heart
                $('#heart-icon-' + movieId).removeClass('fa-regular').addClass('fa-solid text-blue-500');
                $('#heart-icon-' + movieId).data('is-favorite', true);
            }
            if (response.isRemoved) {
                // update the UI to show the filled heart
                $('#heart-icon-' + movieId).removeClass('fa-solid text-blue-500').addClass('fa-regular');
                $('#heart-icon-' + movieId).data('is-favorite', false);
            }
        },
        error: function (xhr, status, error) {
            console.log(xhr.responseText);
        }
    });
}
</script>